'use strict';;let response,config,bcrypt;_faa‍.x([["users",()=>users],["index",()=>index],["findUsers",()=>findUsers],["createUsers",()=>createUsers],["updateUsers",()=>updateUsers],["deleteUsers",()=>deleteUsers]]);_faa‍.w("../config/response.js",[["default",["response"],function(v){response=v}]]);_faa‍.w("../config/config.js",[["default",["config"],function(v){config=v}]]);_faa‍.w("bcrypt",[["default",["bcrypt"],function(v){bcrypt=v}]]);





const salt = bcrypt.genSaltSync(10);

const users = (req, res) => {
    config.query("SELECT * FROM users", function (error, rows, fields) {
        if (error) {
            _faa‍.g.console.log(error)
        } else {
            response.success(rows, res)
        }
    });
};

const index = (req, res) => {
    response.success("Hello from the Node JS RESTful side!", res)
};

const findUsers = (req, res) => {
    const user_id = req.params.user_id;
    
    config.query("SELECT * FROM users WHERE id = ?", [ user_id ], function (error, rows, fields) {
        if (error) {
            _faa‍.g.console.log(error)
        } else {
            response.success(rows, res)
        }
    });
};

const createUsers = (req, res) => {
    const username = req.body.username;
    const email = req.body.email;
    const password = bcrypt.hashSync(req.body.password, salt);
    const check = bcrypt.compareSync(req.body.password, password);
    _faa‍.g.console.log(check);

    config.query("INSERT INTO users (username, email, password) values (?,?,?)",
    [ username, email, password ], function (error, rows, fields) {
        if (error) {
            _faa‍.g.console.log(error)
        } else {
            response.success("Add user has been successfully", res)
        }
    });
};

const updateUsers = (req, res) => {
    const user_id = req.params.user_id;
    const username = req.body.username;
    const email = req.body.email;
    const password = bcrypt.hashSync(req.body.password, salt);
    const check = bcrypt.compareSync(req.body.password, password);
    _faa‍.g.console.log(check);

    config.query("UPDATE user SET username= ?, email= ?, password= ? WHERE id = ?",
    [ username, email, password, user_id], 
    function (error, rows, fields) {
        if (error) {
            _faa‍.g.console.log(error)
        } else {
            response.success("Update user has been successfully!", res)
        }
    });
};

const deleteUsers = (req, res) => {
    const user_id = req.params.user_id;

    config.query("DELETE FROM user WHERE id = ?",
    [ user_id ],
    function(error, rows, fields) {
        if(error) {
            _faa‍.g.console.log(error)
        } else {
            response.success("Delete user has been successfully!", res)
        }
    });
};



// export default users; 
